@using System.Globalization 
@model Final_Project.Models.ViewModels.DashboardViewModel

@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    ViewData["Title"] = "";
}
<link rel="shortcut icon" type="image/x-icon" href="~/Admin/img/favicon.jpg">

<link rel="stylesheet" href="~/Admin/css/bootstrap.min.css">
<link rel="stylesheet" href="~/Admin/css/animate.css">
<link rel="stylesheet" href="~/Admin/css/dataTables.bootstrap4.min.css">
<link rel="stylesheet" href="~/Admin/plugins/fontawesome/css/fontawesome.min.css">
<link rel="stylesheet" href="~/Admin/plugins/fontawesome/css/all.min.css">
<link rel="stylesheet" href="~/Admin/css/style.css">

<div class="page-wrapper">
    <div class="content">
        <div class="row g-4">

            <!-- Tổng doanh thu -->
            <div class="col-lg-3 col-sm-6">
                <div class="card shadow-sm border-0">
                    <div class="card-body d-flex align-items-center">
                        <div class="rounded-circle bg-primary bg-opacity-10 p-3 me-3">
                            <i class="fas fa-dollar-sign text-primary fa-2x"></i>
                        </div>
                        <div>
                            <h5 class="mb-0 fw-bold counters"
                                data-count="@Model.TotalSaleAmount.ToString(CultureInfo.InvariantCulture)">
                                @Model.TotalSaleAmount.ToString("C", CultureInfo.GetCultureInfo("vi-VN"))
                            </h5>
                            <small class="text-muted">Tổng doanh thu</small>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Khách hàng -->
            <div class="col-lg-3 col-sm-6">
                <div class="card shadow-sm border-0">
                    <div class="card-body d-flex align-items-center">
                        <div class="rounded-circle bg-success bg-opacity-10 p-3 me-3">
                            <i class="fas fa-user text-success fa-2x"></i>
                        </div>
                        <div>
                            <h5 class="mb-0 fw-bold counters" data-count="@Model.TotalCustomers">@Model.TotalCustomers</h5>
                            <small class="text-muted">Khách hàng</small>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Nhà cung cấp -->
            <div class="col-lg-3 col-sm-6">
                <div class="card shadow-sm border-0">
                    <div class="card-body d-flex align-items-center">
                        <div class="rounded-circle bg-warning bg-opacity-10 p-3 me-3">
                            <i class="fas fa-truck text-warning fa-2x"></i>
                        </div>
                        <div>
                            <h5 class="mb-0 fw-bold counters" data-count="@Model.TotalSuppliers">@Model.TotalSuppliers</h5>
                            <small class="text-muted">Nhà cung cấp</small>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Số hóa đơn bán -->
            <div class="col-lg-3 col-sm-6">
                <div class="card shadow-sm border-0">
                    <div class="card-body d-flex align-items-center">
                        <div class="rounded-circle bg-danger bg-opacity-10 p-3 me-3">
                            <i class="fas fa-file-invoice text-danger fa-2x"></i>
                        </div>
                        <div>
                            <h5 class="mb-0 fw-bold counters" data-count="@Model.TotalSalesInvoice">@Model.TotalSalesInvoice</h5>
                            <small class="text-muted">Số hóa đơn bán</small>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Tổng truy cập -->
            <div class="col-md-4">
                <div class="card shadow-sm border-0 text-white bg-info">
                    <div class="card-body text-center">
                        <i class="fas fa-chart-line fa-2x mb-2"></i>
                        <h5 class="fw-bold counters" data-count="@Model.TotalVisits">@Model.TotalVisits</h5>
                        <small>Tổng truy cập</small>
                    </div>
                </div>
            </div>

            <!-- Khách hàng quay lại -->
            <div class="col-md-4">
                <div class="card shadow-sm border-0 text-white bg-secondary">
                    <div class="card-body text-center">
                        <i class="fas fa-user-check fa-2x mb-2"></i>
                        <h5 class="fw-bold counters" data-count="@Model.TotalUserVisits">@Model.TotalUserVisits</h5>
                        <small>Khách hàng quay lại</small>
                    </div>
                </div>
            </div>

            <!-- Khách hàng ẩn danh -->
            <div class="col-md-4">
                <div class="card shadow-sm border-0 text-white bg-dark">
                    <div class="card-body text-center">
                        <i class="fas fa-user-secret fa-2x mb-2"></i>
                        <h5 class="fw-bold counters" data-count="@Model.TotalGuestVisits">@Model.TotalGuestVisits</h5>
                        <small>Khách hàng ẩn danh</small>
                    </div>
                </div>
            </div>

        </div>

        <!-- Sản phẩm mới -->
        <div class="card mt-5 shadow-sm border-0">
            <div class="card-header bg-white border-bottom">
                <h5 class="mb-0 fw-bold">Sản phẩm mới thêm</h5>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-hover align-middle">
                        <thead class="table-light">
                            <tr>
                                <th>#</th>
                                <th>Sản phẩm</th>
                                <th>Giá</th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.RecentProducts.Count; i++)
                            {
                                var p = Model.RecentProducts[i];
                                <tr>
                                    <td>@(i + 1)</td>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <img src="@p.ImageURL" alt="@p.TenSP" class="rounded me-2" style="width:40px;height:40px;object-fit:cover;" />
                                            @p.TenSP
                                        </div>
                                    </td>
                                    <td class="fw-bold text-primary">@p.DonGia.ToString("C")</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

    </div>
</div>

<script src="~/Admin/js/jquery-3.6.0.min.js"></script>
<script src="~/Admin/js/feather.min.js"></script>
<script src="~/Admin/js/jquery.slimscroll.min.js"></script>
<script src="~/Admin/js/jquery.dataTables.min.js"></script>
<script src="~/Admin/js/dataTables.bootstrap4.min.js"></script>
<script src="~/Admin/js/bootstrap.bundle.min.js"></script>
<script src="~/Admin/plugins/apexchart/apexcharts.min.js"></script>
<script src="~/Admin/plugins/apexchart/chart-data.js"></script>
<script src="~/Admin/js/script.js"></script>

<script>
    $(function () {
      function parseNumberFromString(str) {
        if (str == null) return NaN;
        str = String(str).trim();
        if (!str) return NaN;

        // remove spaces and obvious currency symbols, keep digits . , -
        str = str.replace(/\s/g, '').replace(/[^\d\-,.]/g, '');

        // If both dot and comma present -> assume vn format: '.' thousands, ',' decimal
        if (str.indexOf('.') !== -1 && str.indexOf(',') !== -1) {
          str = str.replace(/\./g, '').replace(/,/g, '.');
        } else if (str.indexOf(',') !== -1 && str.indexOf('.') === -1) {
          // only comma -> treat as decimal separator
          str = str.replace(/,/g, '.');
        } else {
          // only dots or none: if many dots, probably thousands separators -> remove them
          var dotCount = (str.match(/\./g) || []).length;
          if (dotCount > 1) str = str.replace(/\./g, '');
        }

        return parseFloat(str);
      }

      function formatCurrency(num) {
        num = Number(num) || 0;
        return num.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });
      }

      $('.counters').each(function () {
        var $this = $(this);
        var raw = $this.attr('data-count') || $this.text();
        var countTo = parseNumberFromString(raw);

        if (isNaN(countTo)) {
          console.warn('Counter value invalid:', raw, $this);
          countTo = 0; // fallback
        }

        var isCurrency = /[₫$€¥£]/.test($this.text()) || !!$this.data('is-currency');

        $({ val: 0 }).animate({ val: countTo }, {
          duration: 1500,
          easing: 'swing',
          step: function (now) {
            if (isCurrency) {
              $this.text(formatCurrency(now));
            } else {
              $this.text(Math.floor(now).toLocaleString());
            }
          },
          complete: function () {
            if (isCurrency) {
              $this.text(formatCurrency(countTo));
            } else {
              $this.text(countTo.toLocaleString());
            }
          }
        });
      });
    });
</script>
