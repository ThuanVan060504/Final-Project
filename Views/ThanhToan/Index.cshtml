@model List<Final_Project.Models.Shop.GioHangViewModel>

@{
    ViewData["Title"] = "Trang đặt hàng";
    var diaChi = ViewBag.DiaChi as Final_Project.Models.User.DiaChiNguoiDung;
    var hoTen = ViewBag.HoTen as string;
    var soDienThoai = ViewBag.SoDienThoai as string;
    var tongTien = Model.Sum(m => m.ThanhTien);
    var phiVanChuyen = 17000;
    var tongThanhToan = tongTien + phiVanChuyen;
}
<style>
/* 🎨 Màu chủ đạo */
:root {
    --main-orange: #ff9e4f;
    --main-orange-dark: #e88738;
    --text-dark: #333;
    --text-light: #555;
    --bg-light: #fafafa;
}

/* Tiêu đề section */
.section-title {
    font-weight: 600;
    font-size: 1.25rem;
    margin-top: 30px;
    margin-bottom: 15px;
    border-bottom: 2px solid #000000);
    padding-bottom: 6px;
    color: var(--text-dark);
}

/* Địa chỉ mặc định */
#default-address {
    background-color: var(--bg-light);
    border: 1px solid #ddd;
    border-radius: 8px;
    padding: 15px 20px;
    max-width: 500px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.05);
}
#default-address p {
    margin-bottom: 6px;
    font-size: 1rem;
    color: var(--text-dark);
}
#default-address strong#default-name {
    font-size: 1.1rem;
    font-weight: 600;
    color: var(--main-orange);
}
#default-address button {
    color: var(--main-orange);
    font-weight: 500;
    background: none;
    border: none;
    padding: 0;
    cursor: pointer;
    transition: color 0.2s ease;
}
#default-address button:hover {
    text-decoration: underline;
    color: var(--main-orange-dark);
}

/* Danh sách địa chỉ */
#addressList {
    max-width: 600px;
    background: #fff;
    border: 1px solid #eee;
    border-radius: 8px;
    padding: 15px 20px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.05);
}

#addressList #addresses div {
    background-color: #fffaf5;
    border: 1px solid #ffd8b2;
    border-radius: 6px;
    padding: 12px 15px;
    margin-bottom: 12px;
    transition: background-color 0.3s ease, box-shadow 0.3s ease;
}
#addressList #addresses div:hover {
    background-color: #ffe7cc;
    box-shadow: 0 3px 8px rgba(0,0,0,0.08);
}
#addressList #addresses div p {
    margin: 3px 0;
    font-size: 0.95rem;
    color: var(--text-dark);
}

/* Nút phụ */
#addressList button.btn-outline-secondary {
    border-color: var(--main-orange);
    color: var(--main-orange);
    font-weight: 500;
}
#addressList button.btn-outline-secondary:hover {
    background-color: var(--main-orange);
    color: #fff;
}

/* Form thêm địa chỉ */
#addForm input {
    border-radius: 6px;
    border: 1px solid #ccc;
    padding: 8px 12px;
    font-size: 0.95rem;
    transition: border-color 0.3s ease;
}
#addForm input:focus {
    border-color: var(--main-orange);
    outline: none;
    box-shadow: 0 0 5px rgba(255,158,79,0.5);
}
#addForm button.btn-primary {
    background-color: var(--main-orange);
    border-color: var(--main-orange);
    font-weight: 600;
    border-radius: 6px;
    padding: 6px 16px;
    transition: background-color 0.3s ease;
}
#addForm button.btn-primary:hover {
    background-color: var(--main-orange-dark);
}

/* Sản phẩm */
.row.align-items-center.border {
    background-color: #fff;
    border-radius: 8px;
    padding: 12px 15px !important;
    border: 1px solid #eee;
    transition: box-shadow 0.3s ease;
}
.row.align-items-center.border:hover {
    box-shadow: 0 4px 12px rgba(0,0,0,0.08);
}
.product-image {
    border-radius: 6px;
    border: 1px solid #ddd;
}
.col-md-5 p.mb-0 {
    font-weight: 600;
    font-size: 1.05rem;
    color: var(--text-dark);
}
.col-md-5 small {
    color: var(--text-light);
    font-style: italic;
}
.col-md-2.text-center, .col-md-2.text-end {
    font-weight: 600;
    font-size: 1rem;
    color: var(--main-orange);
}

/* Phương thức vận chuyển */
.border.p-3.mb-3 {
    background-color: #fff;
    border-radius: 8px;
    border: 1px solid #eee;
    padding: 12px;
}
.border.p-3.mb-3 p strong {
    color: var(--text-dark);
    font-weight: 600;
    font-size: 1.05rem;
}
.border.p-3.mb-3 small {
    color: var(--text-light);
    font-style: italic;
}

/* Voucher */
.d-flex.justify-content-between.mb-3 p {
    font-weight: 500;
    font-size: 1rem;
    color: var(--text-dark);
}
.btn-outline-primary {
    border-color: var(--main-orange);
    color: var(--main-orange);
    font-weight: 600;
    transition: all 0.3s ease;
}
.btn-outline-primary:hover {
    background-color: var(--main-orange);
    color: #fff;
}

/* Phương thức thanh toán */
.d-flex.gap-3.flex-wrap.mb-3 button {
    min-width: 150px;
    font-weight: 600;
    border-radius: 8px;
    border: 1.5px solid var(--main-orange);
    background-color: #fff;
    color: var(--main-orange);
    transition: all 0.3s ease;
}
.d-flex.gap-3.flex-wrap.mb-3 button:hover {
    background-color: var(--main-orange);
    color: #fff;
}
.btn-danger {
    background-color: var(--main-orange) !important;
    border-color: var(--main-orange) !important;
    color: white !important;
}
.btn-danger:hover {
    background-color: var(--main-orange-dark) !important;
}

/* Tổng tiền */
.order-summary p {
    font-size: 1.05rem;
    margin: 6px 0;
    font-weight: 600;
    color: var(--text-dark);
}
.order-summary h5 {
    margin-top: 10px;
    color: var(--main-orange-dark);
}

/* Nút đặt hàng */
.btn-place-order {
    font-size: 1.15rem;
    font-weight: 700;
    padding: 10px 30px;
    border-radius: 8px;
    background-color: var(--main-orange);
    border: none;
    margin:10px;
    color: white;
    box-shadow: 0 3px 8px rgba(255,158,79,0.5);
    transition: background-color 0.3s ease, box-shadow 0.3s ease;
    cursor: pointer;
}
.btn-place-order:hover {
    background-color: var(--main-orange-dark);
    box-shadow: 0 4px 12px rgba(255,158,79,0.7);
}

</style>

    <!-- Địa chỉ -->
    <h4 class="section-title">📍 Địa Chỉ Nhận Hàng</h4>
    <div id="default-address" class="mb-3">
        <p>
            <strong id="default-name">@diaChi?.TenNguoiNhan</strong>
            (<span id="default-phone">@diaChi?.SoDienThoai</span>)
        </p>
        <p id="default-full-address">
            @diaChi?.DiaChiChiTiet, @diaChi?.PhuongXa, @diaChi?.QuanHuyen, @diaChi?.TinhTP
        </p>
        <button class="btn btn-link" type="button" onclick="toggleAddressList()">Thay đổi</button>
    </div>

    <!-- Danh sách địa chỉ -->
    <div id="addressList" style="display: none;" class="mb-4">
        <div id="addresses">
        </div>

        <button class="btn btn-sm btn-outline-success mb-2" type="button" onclick="toggleAddForm()">➕ Thêm địa chỉ mới</button>

        <div id="addForm" style="display: none;">
            <div class="mb-2"><input type="text" class="form-control" id="newName" placeholder="Họ tên"></div>
            <div class="mb-2"><input type="text" class="form-control" id="newPhone" placeholder="Số điện thoại"></div>
            <div class="mb-2"><input type="text" class="form-control" id="newAddr" placeholder="Địa chỉ chi tiết"></div>
            <button class="btn btn-primary btn-sm" type="button" onclick="addAddress()">Lưu địa chỉ</button>
        </div>
    </div>

    <!-- Sản phẩm -->
    <h4 class="section-title">📦 Sản phẩm</h4>
    @foreach (var sp in Model)
    {
        <div class="row align-items-center border p-3 mb-2">
            <div class="col-md-1">
                <img src="@sp.ImageURL" alt="product" class="product-image" />
            </div>
            <div class="col-md-5">
                <p class="mb-0">@sp.TenSP</p>
                <small>Số lượng: @sp.SoLuong</small>
            </div>
            <div class="col-md-2 text-center">₫@sp.DonGia.ToString("n0")</div>
            <div class="col-md-2 text-center">x @sp.SoLuong</div>
            <div class="col-md-2 text-end">₫@sp.ThanhTien.ToString("n0")</div>
        </div>
    }

    <!-- Vận chuyển -->
    <h4 class="section-title">🚚 Phương thức vận chuyển</h4>
    <div class="border p-3 mb-3">
        <p><strong>Vận Chuyển Nhanh</strong> - ₫@phiVanChuyen.ToString("n0")</p>
        <small>Dự kiến nhận hàng từ 1 Tháng 8 - 5 Tháng 8</small>
    </div>

    <!-- Voucher -->
    <h4 class="section-title">🎁 Voucher & Shopee Xu</h4>
    <div class="d-flex justify-content-between mb-3">
        <p>Không sử dụng Xu</p>
        <button class="btn btn-sm btn-outline-primary">Chọn Voucher</button>
    </div>

    <!-- Thanh toán -->
    <h4 class="section-title">💳 Phương thức thanh toán</h4>
    <form method="post" action="/ThanhToan/ThanhToan" id="checkoutForm">
        @foreach (var sp in Model)
        {
            <input type="hidden" name="chonSP" value="@sp.MaSP" />
        }
        <input type="hidden" name="paymentMethod" id="paymentMethod" />

        <div class="d-flex gap-3 flex-wrap mb-3">
            <button type="button" class="btn btn-outline-secondary" id="btnCOD">Thanh toán khi nhận hàng</button>

            <button type="button" class="btn btn-outline-secondary" id="btnMomo">Ví MOMO</button>
            <button type="button" class="btn btn-outline-secondary" id="btnVnpay">Ví VNPAY</button>

        </div>
        <input type="hidden" name="paymentMethod" id="paymentMethod" />

        <p class="text-muted">Phí thu hộ: ₫0 VND</p>

        <!-- Tổng tiền -->
        <h4 class="section-title">🧾 Tổng thanh toán</h4>
        <div class="order-summary">
            <p>Tổng tiền hàng: ₫@tongTien.ToString("n0")</p>
            <p>Phí vận chuyển: ₫@phiVanChuyen.ToString("n0")</p>
            <h5><strong>Tổng thanh toán: ₫@tongThanhToan.ToString("n0")</strong></h5>
        </div>

        <div class="text-end mt-4">
            <button class="btn btn-place-order px-4 py-2" type="button" onclick="submitFinalOrder()">Đặt hàng</button>
        </div>
    </form>
    <script>
            let selectedMethod = "";

            document.getElementById("btnCOD").addEventListener("click", function () {
                selectedMethod = "COD";
                highlightSelected(this);
            });



            document.getElementById("btnMomo").addEventListener("click", function () {
                selectedMethod = "MOMO";
                highlightSelected(this);
            });

            document.getElementById("btnVnpay").addEventListener("click", function () {
            selectedMethod = "VNPAY";
            highlightSelected(this);
        });


            function highlightSelected(button) {
            document.querySelectorAll("#btnCOD, #btnMomo, #btnVnpay").forEach(btn => {
                btn.classList.remove("btn-danger");
                btn.classList.add("btn-outline-secondary");
            });
            button.classList.remove("btn-outline-secondary");
            button.classList.add("btn-danger");
        }

           function submitFinalOrder() {
            if (!selectedMethod) {
                alert("Vui lòng chọn phương thức thanh toán.");
                return;
            }

            if (selectedMethod === "MOMO") {
                let url = "/ThanhToan/TaoMomoQRCode?";
                document.querySelectorAll("input[name='chonSP']").forEach(sp => {
                    url += "chonSP=" + sp.value + "&";
                });
                url += "tongTien=" + @tongThanhToan;
                window.location.href = url;
            } else if (selectedMethod === "VNPAY") {
                let url = "/ThanhToan/TaoVnpayQRCode?";
                document.querySelectorAll("input[name='chonSP']").forEach(sp => {
                    url += "chonSP=" + sp.value + "&";
                });
                url += "tongTien=" + @tongThanhToan;
                window.location.href = url;
            } else {
                document.getElementById("paymentMethod").value = selectedMethod;
                document.getElementById("checkoutForm").submit();
            }
        }

    </script>


    <!-- Script quản lý địa chỉ -->
    <script>
        function toggleAddressList() {
            const addressList = document.getElementById('addressList');
            addressList.style.display = addressList.style.display === 'none' ? 'block' : 'none';

            if (addressList.style.display === 'block') {
                fetch('/ThanhToan/LayDanhSachDiaChi')
                    .then(res => res.json())
                    .then(data => {
                        if (data.success) {
                            const container = document.getElementById('addresses');
                            container.innerHTML = ''; // Xóa cũ

                            data.data.forEach(d => {
                                const div = document.createElement('div');
                                div.className = 'border rounded p-2 mb-2';
                                div.innerHTML =
                                    <p><strong>${d.tenNguoiNhan}</strong> (${d.soDienThoai})</p>
                                    <p>${d.diaChiChiTiet}, ${d.phuongXa}, ${d.quanHuyen}, ${d.tinhTP}</p>
                                    <button class="btn btn-sm btn-outline-secondary" onclick="chonDiaChi(${d.maDC})">Chọn địa chỉ này</button>
                                ;
                                container.appendChild(div);
                            });
                        } else {
                            alert(data.message || 'Không thể tải địa chỉ.');
                        }
                    })
                    .catch(err => {
                        console.error(err);
                        alert('Có lỗi xảy ra khi tải địa chỉ.');
                    });
            }
        }

        function chonDiaChi(maDiaChi) {
            // Gửi request lên server để chọn địa chỉ, hoặc cập nhật UI tạm thời
            console.log("Địa chỉ được chọn:", maDiaChi);
            // Ví dụ: reload lại trang hoặc update div defaultAddress
            location.reload(); // Giải pháp tạm
        }
    </script>


